// Code generated by MockGen. DO NOT EDIT.
// Source: promotion-repo.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	entity "github.com/gendutski/be-candidate-home-test/core/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockPromotionRepo is a mock of PromotionRepo interface.
type MockPromotionRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPromotionRepoMockRecorder
}

// MockPromotionRepoMockRecorder is the mock recorder for MockPromotionRepo.
type MockPromotionRepoMockRecorder struct {
	mock *MockPromotionRepo
}

// NewMockPromotionRepo creates a new mock instance.
func NewMockPromotionRepo(ctrl *gomock.Controller) *MockPromotionRepo {
	mock := &MockPromotionRepo{ctrl: ctrl}
	mock.recorder = &MockPromotionRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPromotionRepo) EXPECT() *MockPromotionRepoMockRecorder {
	return m.recorder
}

// GetPromotionByProducts mocks base method.
func (m *MockPromotionRepo) GetPromotionByProducts(products []*entity.Product) (map[int64][]*entity.Promotion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPromotionByProducts", products)
	ret0, _ := ret[0].(map[int64][]*entity.Promotion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPromotionByProducts indicates an expected call of GetPromotionByProducts.
func (mr *MockPromotionRepoMockRecorder) GetPromotionByProducts(products interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPromotionByProducts", reflect.TypeOf((*MockPromotionRepo)(nil).GetPromotionByProducts), products)
}
